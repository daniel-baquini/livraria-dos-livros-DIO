{"version":3,"file":"src_app_user_user_module_ts.js","mappings":"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","sources":["./src/app/shared/backend/user/user.service.ts","./src/app/user/create-account-page/create-account-page.component.ts","./src/app/user/create-account-page/create-account-page.component.html","./src/app/user/create-account-page/create-account-page.validator.ts","./src/app/user/forgot-password-page/forgot-password-page.component.ts","./src/app/user/forgot-password-page/forgot-password-page.component.html","./src/app/user/login-page/login-page.component.ts","./src/app/user/login-page/login-page.component.html","./src/app/user/user.module.ts"],"sourcesContent":["import { Observable } from 'rxjs';\nimport { CrudBackendService } from '../crud-backend.service';\nimport { Injectable } from '@angular/core';\nimport User from './user.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserService {\n    \n    public readonly controllerPath: string = \"user\";\n\n    constructor(private crudBackendService: CrudBackendService) { }\n\n    create(model: User): Observable<string> {\n        return this.crudBackendService.create<User>(this.controllerPath, model);\n    }\n}\n","import { Component } from '@angular/core';\nimport CreateAccountPageValidator from './create-account-page.validator';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { UserService } from 'src/app/shared/backend/user/user.service';\n\n@Component({\n    selector: 'app-create-account-page',\n    templateUrl: './create-account-page.component.html',\n    styleUrls: ['./create-account-page.component.css']\n})\nexport class CreateAccountPageComponent {\n\n    form: FormGroup;\n\n    constructor(\n        formBuilder: FormBuilder,\n        private userService: UserService,\n        validator: CreateAccountPageValidator\n    ) {\n        this.form = formBuilder.group({\n            name: new FormControl(\"\", validator.name),\n            password: new FormControl(\"\", validator.password),\n            surname: new FormControl(\"\", validator.surname),\n            username: new FormControl(\"\", validator.username)\n        });\n    }\n\n    createAccount(): void {\n        console.log(JSON.stringify(this.form.value));\n        this.userService.create(this.form.value).subscribe(x => {\n            console.log(x);\n        });\n    }\n\n}","<app-logo></app-logo>\n<form [formGroup]=\"this.form\" [noValidate]>\n    <app-field\n        [abstractControl]=\"this.form.controls['name']\"\n        formControlName=\"name\"\n        [label]=\"'Nome'\"\n    ></app-field>\n    <app-field\n        [abstractControl]=\"this.form.controls['surname']\"\n        formControlName=\"surname\"\n        [label]=\"'Sobrenome'\"\n    ></app-field>\n    <app-field\n        [abstractControl]=\"this.form.controls['username']\"\n        formControlName=\"username\"\n        [label]=\"'Email'\"\n    ></app-field>\n    <app-field\n        [abstractControl]=\"this.form.controls['password']\"\n        formControlName=\"password\"\n        [label]=\"'Senha'\"\n        [type]=\"'password'\"\n    ></app-field>\n</form>\n<div class=\"buttons-row\">\n    <app-button [label]=\"'Voltar'\" [routerLink]=\"'/user'\" [type]=\"'secondary'\"></app-button>\n    <app-button\n        (click)=\"this.createAccount()\"\n        [disabled]=\"this.form.invalid\"\n        [label]=\"'Cadastrar-se'\"\n    ></app-button>\n</div>","import { Injectable } from \"@angular/core\";\nimport { AbstractControl, ValidationErrors } from \"@angular/forms\";\n\n@Injectable({\n    providedIn: \"root\"\n})\nclass CreateAccountPageValidator {\n\n    name(control: AbstractControl): null | ValidationErrors {\n        const value = `${control.value ?? \"\"}`.trim();\n\n        if(value.length === 0) {\n            return { \"name\": \"Necessário fornecer um nome\" }\n        }\n\n        return null;\n    }\n\n    password(control: AbstractControl): null | ValidationErrors {\n        const value = `${control.value ?? \"\"}`.trim();\n\n        if(value.length === 0) {\n            return { \"password\": \"Necessário fornecer uma senha\" }\n        }\n\n        return null;\n    }\n\n    surname(control: AbstractControl): null | ValidationErrors {\n        const value = `${control.value ?? \"\"}`.trim();\n\n        if(value.length === 0) {\n            return { \"surname\": \"Necessário fornecer um sobrenome\" }\n        }\n\n        return null;\n    }\n\n    username(control: AbstractControl): null | ValidationErrors {\n        const value = `${control.value ?? \"\"}`.trim()\n\n        if(value.length === 0) {\n            return { email: \"Necessário fornecer um email\" }\n        }\n\n        if(!(/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(value))) {\n            return { 'email': \"Formato de e-mail inválido.\" };\n        }\n\n        return null;\n    }\n    \n}\n\nexport default CreateAccountPageValidator","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-forgot-password-page',\n    templateUrl: './forgot-password-page.component.html',\n    styleUrls: ['./forgot-password-page.component.css']\n})\nexport class ForgotPasswordPageComponent { }\n","<app-logo></app-logo>\n<form [noValidate]>\n    <app-field [label]=\"'Email'\"></app-field>\n    <app-field [label]=\"'Nova senha'\"></app-field>\n</form>\n<div class=\"buttons-row\">\n    <app-button [label]=\"'Voltar'\" [routerLink]=\"''\" [type]=\"'secondary'\"></app-button>\n    <app-button [label]=\"'Alterar senha'\"></app-button>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css']\n})\nexport class LoginPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-logo></app-logo>\n<form [noValidate]>\n    <app-field [label]=\"'Email'\"></app-field>\n    <app-field [label]=\"'Senha'\"></app-field>\n    <div class=\"form-buttons\">\n        <app-button [label]=\"'Entrar'\"></app-button>\n        <div class=\"form-buttons__forgot-password\" [routerLink]=\"'/user/forgot-password'\">Esqueceu sua senha?</div>\n    </div>\n</form>\n<span class=\"create-account text-preset-450\">\n    Não tem uma conta? <span class=\"create-account__create-one text-preset-470\" [routerLink]=\"'/user/create-account'\">Crie uma</span>\n</span>","import { CreateAccountPageComponent } from './create-account-page/create-account-page.component';\nimport { ForgotPasswordPageComponent } from './forgot-password-page/forgot-password-page.component';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\n\nconst userRoutes: Routes = [\n    {\n        component: LoginPageComponent,\n        path: \"\"\n    },\n    {\n        component: CreateAccountPageComponent,\n        path: \"create-account\"\n    },\n    {\n        component: ForgotPasswordPageComponent,\n        path: \"forgot-password\"\n    }\n];\n\n@NgModule({\n    declarations: [\n        CreateAccountPageComponent,\n        ForgotPasswordPageComponent,\n        LoginPageComponent\n    ],\n    imports: [\n        ReactiveFormsModule,\n        RouterModule.forChild(userRoutes),\n        SharedModule\n    ]\n})\nexport class UserModule { }\n"],"names":[],"sourceRoot":"webpack:///"}