{"version":3,"file":"src_app_user_user_module_ts.js","mappings":"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","sources":["./src/app/user/create-account-page/create-account-page.component.ts","./src/app/user/create-account-page/create-account-page.component.html","./src/app/user/create-account-page/create-account-page.validator.ts","./src/app/user/forgot-password-page/forgot-password-page.component.ts","./src/app/user/forgot-password-page/forgot-password-page.component.html","./src/app/user/forgot-password-page/forgot-password-page.validator.ts","./src/app/user/login-page/login-page.component.ts","./src/app/user/login-page/login-page.component.html","./src/app/user/login-page/login-page.validator.ts","./src/app/user/user.module.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport CreateAccountPageValidator from './create-account-page.validator';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { UserService } from 'src/app/shared/backend/user/user.service';\nimport { Router } from '@angular/router';\nimport JavaErrorResponse from 'src/app/shared/backend/server-response/java-error-response.model';\n\n@Component({\n    selector: 'app-create-account-page',\n    templateUrl: './create-account-page.component.html',\n    styleUrls: ['./create-account-page.component.css']\n})\nexport class CreateAccountPageComponent {\n\n    errorMessage: string = \"\";\n    form: FormGroup;\n    showAlert: boolean = false;\n\n    constructor(\n        formBuilder: FormBuilder,\n        private router: Router,\n        private userService: UserService,\n        validator: CreateAccountPageValidator\n    ) {\n        this.form = formBuilder.group({\n            name: new FormControl(\"\", validator.name),\n            password: new FormControl(\"\", validator.password),\n            surname: new FormControl(\"\", validator.surname),\n            username: new FormControl(\"\", validator.username)\n        });\n    }\n\n    createAccount(): void {\n        this.userService.create(this.form.value).subscribe({\n            error: ((x: JavaErrorResponse<string>) => {\n                this.errorMessage = x.error.data;\n                this.showAlert = true;\n            }),\n            next: value => {\n                this.router.navigateByUrl(\"/user\");\n            }\n        });\n    }\n\n}","<app-logo></app-logo>\n<app-alert\n    [canClose]=\"true\"\n    (close)=\"this.showAlert = false\"\n    [message]=\"this.errorMessage\"\n    *ngIf=\"this.showAlert\"\n    [type]=\"'error'\"\n></app-alert>\n<form [formGroup]=\"this.form\" [noValidate]>\n    <app-field\n        [abstractControl]=\"this.form.controls['name']\"\n        formControlName=\"name\"\n        [label]=\"'Nome'\"\n    ></app-field>\n    <app-field\n        [abstractControl]=\"this.form.controls['surname']\"\n        formControlName=\"surname\"\n        [label]=\"'Sobrenome'\"\n    ></app-field>\n    <app-field\n        [abstractControl]=\"this.form.controls['username']\"\n        formControlName=\"username\"\n        [label]=\"'Email'\"\n    ></app-field>\n    <app-field\n        [abstractControl]=\"this.form.controls['password']\"\n        formControlName=\"password\"\n        [label]=\"'Senha'\"\n        [type]=\"'password'\"\n    ></app-field>\n</form>\n<div class=\"buttons-row\">\n    <app-button [label]=\"'Voltar'\" [routerLink]=\"'/user'\" [type]=\"'secondary'\"></app-button>\n    <app-button\n        (click)=\"this.createAccount()\"\n        [disabled]=\"this.form.invalid\"\n        [label]=\"'Cadastrar-se'\"\n    ></app-button>\n</div>","import { Injectable } from \"@angular/core\";\nimport { AbstractControl, ValidationErrors } from \"@angular/forms\";\n\n@Injectable({\n    providedIn: \"root\"\n})\nclass CreateAccountPageValidator {\n\n    name(control: AbstractControl): null | ValidationErrors {\n        const value = `${control.value ?? \"\"}`.trim();\n\n        if(value.length === 0) {\n            return { \"name\": \"Necessário fornecer um nome\" }\n        }\n\n        return null;\n    }\n\n    password(control: AbstractControl): null | ValidationErrors {\n        const value = `${control.value ?? \"\"}`.trim();\n\n        if(value.length === 0) {\n            return { \"password\": \"Necessário fornecer uma senha\" }\n        }\n\n        return null;\n    }\n\n    surname(control: AbstractControl): null | ValidationErrors {\n        const value = `${control.value ?? \"\"}`.trim();\n\n        if(value.length === 0) {\n            return { \"surname\": \"Necessário fornecer um sobrenome\" }\n        }\n\n        return null;\n    }\n\n    username(control: AbstractControl): null | ValidationErrors {\n        const value = `${control.value ?? \"\"}`.trim()\n\n        if(value.length === 0) {\n            return { email: \"Necessário fornecer um email\" }\n        }\n\n        if(!(/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(value))) {\n            return { 'email': \"Formato de e-mail inválido.\" };\n        }\n\n        return null;\n    }\n    \n}\n\nexport default CreateAccountPageValidator","import { Component } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport JavaErrorResponse from 'src/app/shared/backend/server-response/java-error-response.model';\nimport { UserService } from 'src/app/shared/backend/user/user.service';\nimport ForgotPasswordPageValidator from './forgot-password-page.validator';\n\n@Component({\n    selector: 'app-forgot-password-page',\n    templateUrl: './forgot-password-page.component.html',\n    styleUrls: ['./forgot-password-page.component.css']\n})\nexport class ForgotPasswordPageComponent {\n\n    errorMessage: string = \"\";\n    form: FormGroup;\n    showAlert: boolean = false;\n\n    constructor(\n        formBuilder: FormBuilder,\n        private router: Router,\n        private userService: UserService,\n        validator: ForgotPasswordPageValidator\n    ) {\n        this.form = formBuilder.group({\n            password: new FormControl(\"\", validator.password),\n            username: new FormControl(\"\", validator.username)\n        });\n    }\n\n    retrievePassword(): void {\n        this.userService.forgotPassword(this.form.value).subscribe({\n            error: ((x: JavaErrorResponse<string>) => {\n                console.log(x)\n                this.errorMessage = x.error.data;\n                this.showAlert = true;\n            }),\n            next: value => {\n                this.router.navigate(\n                    [\"/user\"],\n                    {\n                        queryParams: {\n                            \"success-message\": value.data\n                        }\n                    }\n                );\n            }\n        });\n    }\n\n}\n","<app-logo></app-logo>\n<app-alert\n    [canClose]=\"true\"\n    (close)=\"this.showAlert = false\"\n    [message]=\"this.errorMessage\"\n    *ngIf=\"this.showAlert\"\n    [type]=\"'error'\"\n></app-alert>\n<form [formGroup]=\"this.form\" [noValidate]>\n    <app-field\n        [abstractControl]=\"this.form.controls['username']\"\n        formControlName=\"username\"\n        [label]=\"'Email'\"\n    ></app-field>\n    <app-field\n        [abstractControl]=\"this.form.controls['password']\"\n        formControlName=\"password\"\n        [label]=\"'Nova senha'\"\n        [type]=\"'password'\"\n    ></app-field>\n</form>\n<div class=\"buttons-row\">\n    <app-button [label]=\"'Voltar'\" [routerLink]=\"'/user'\" [type]=\"'secondary'\"></app-button>\n    <app-button (btnClick)=\"this.retrievePassword()\" [disabled]=\"this.form.invalid\" [label]=\"'Alterar senha'\"></app-button>\n</div>","import { Injectable } from \"@angular/core\";\nimport { AbstractControl, ValidationErrors } from \"@angular/forms\";\n\n@Injectable({\n    providedIn: \"root\"\n})\nclass ForgotPasswordPageValidator {\n\n    password(control: AbstractControl): null | ValidationErrors {\n        const value = `${control.value ?? \"\"}`.trim();\n\n        if(value.length === 0) {\n            return { \"password\": \"Necessário fornecer uma senha\" }\n        }\n\n        return null;\n    }\n\n    username(control: AbstractControl): null | ValidationErrors {\n        const value = `${control.value ?? \"\"}`.trim()\n\n        if(value.length === 0) {\n            return { email: \"Necessário fornecer um email\" }\n        }\n\n        if(!(/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(value))) {\n            return { 'email': \"Formato de e-mail inválido.\" };\n        }\n\n        return null;\n    }\n    \n}\n\nexport default ForgotPasswordPageValidator","import { Component } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport LoginPageValidator from './login-page.validator';\nimport { UserService } from 'src/app/shared/backend/user/user.service';\nimport JavaErrorResponse from 'src/app/shared/backend/server-response/java-error-response.model';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n    selector: 'app-login-page',\n    templateUrl: './login-page.component.html',\n    styleUrls: ['./login-page.component.css']\n})\nexport class LoginPageComponent {\n    \n    errorMessage: string = \"\";\n    form: FormGroup;\n    showAlert: boolean = false;\n\n    constructor(\n        private activatedRoute: ActivatedRoute,\n        formBuilder: FormBuilder,\n        public router: Router,\n        private userService: UserService,\n        validator: LoginPageValidator\n    ) {\n        this.form = formBuilder.group({\n            password: new FormControl(\"\", validator.password),\n            username: new FormControl(\"\", validator.username)\n        });\n    }\n\n    get successMessageQueryParam(): string | undefined {\n        return this.activatedRoute.snapshot.queryParams[\"success-message\"];\n    }\n\n    private get returnToQueryParam(): string | undefined {\n        return this.activatedRoute.snapshot.queryParams[\"return-to\"];\n    }\n\n    login(): void {\n        this.userService.login(this.form.value)\n        .then(x => {\n            this.router.navigateByUrl(this.returnToQueryParam ?? \"/\");\n        })\n        .catch((x: JavaErrorResponse<string>) => {\n            this.errorMessage = x.error.data;\n            this.showAlert = true;\n        });\n    }\n\n}\n","<app-logo></app-logo>\n<app-alert\n    [canClose]=\"true\"\n    (close)=\"this.router.navigateByUrl('/user')\"\n    [message]=\"this.successMessageQueryParam\"\n    *ngIf=\"!!this.successMessageQueryParam\"\n    [type]=\"'success'\"\n></app-alert>\n<app-alert\n    [canClose]=\"true\"\n    (close)=\"this.showAlert = false\"\n    [message]=\"this.errorMessage\"\n    *ngIf=\"this.showAlert\"\n    [type]=\"'error'\"\n></app-alert>\n<form [formGroup]=\"this.form\" [noValidate]>\n    <app-field\n        [abstractControl]=\"this.form.controls['username']\"\n        formControlName=\"username\"\n        [label]=\"'Email'\"\n    ></app-field>\n    <app-field\n        [abstractControl]=\"this.form.controls['password']\"\n        formControlName=\"password\"\n        [label]=\"'Senha'\"\n        [type]=\"'password'\"\n    ></app-field>\n    <div class=\"form-buttons\">\n        <app-button\n            (click)=\"this.login()\"\n            [disabled]=\"this.form.invalid\"\n            [label]=\"'Entrar'\"\n        ></app-button>\n        <div class=\"form-buttons__forgot-password\" [routerLink]=\"'/user/forgot-password'\">Esqueceu sua senha?</div>\n    </div>\n</form>\n<span class=\"create-account text-preset-450\">\n    Não tem uma conta? <span class=\"create-account__create-one text-preset-470\" [routerLink]=\"'/user/create-account'\">Crie uma</span>\n</span>","import { AbstractControl, ValidationErrors } from \"@angular/forms\";\nimport { Injectable } from \"@angular/core\";\n\n@Injectable({\n    providedIn: \"root\"\n})\nclass LoginPageValidator {\n\n    password(control: AbstractControl): null | ValidationErrors {\n        const value = `${control.value ?? \"\"}`.trim();\n\n        if(value.length === 0) {\n            return { \"password\": \"Necessário fornecer uma senha\" }\n        }\n\n        return null;\n    }\n\n    username(control: AbstractControl): null | ValidationErrors {\n        const value = `${control.value ?? \"\"}`.trim()\n\n        if(value.length === 0) {\n            return { email: \"Necessário fornecer um email\" }\n        }\n\n        if(!(/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(value))) {\n            return { 'email': \"Formato de e-mail inválido.\" };\n        }\n\n        return null;\n    }\n    \n}\n\nexport default LoginPageValidator","import { CreateAccountPageComponent } from './create-account-page/create-account-page.component';\nimport { ForgotPasswordPageComponent } from './forgot-password-page/forgot-password-page.component';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\n\nconst userRoutes: Routes = [\n    {\n        component: LoginPageComponent,\n        path: \"\"\n    },\n    {\n        component: CreateAccountPageComponent,\n        path: \"create-account\"\n    },\n    {\n        component: ForgotPasswordPageComponent,\n        path: \"forgot-password\"\n    }\n];\n\n@NgModule({\n    declarations: [\n        CreateAccountPageComponent,\n        ForgotPasswordPageComponent,\n        LoginPageComponent\n    ],\n    imports: [\n        ReactiveFormsModule,\n        RouterModule.forChild(userRoutes),\n        SharedModule\n    ]\n})\nexport class UserModule { }\n"],"names":[],"sourceRoot":"webpack:///"}