{"version":3,"file":"src_app_cart_cart_module_ts.js","mappings":"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","sources":["./src/app/cart/cart-item/cart-item.component.ts","./src/app/cart/cart-item/cart-item.component.html","./src/app/cart/cart-page/cart-page.component.ts","./src/app/cart/cart-page/cart-page.component.html","./src/app/cart/cart.module.ts","./src/app/cart/delivery-address-page/delivery-address-page.component.ts","./src/app/cart/delivery-address-page/delivery-address-page.component.html","./src/app/cart/delivery-address-page/delivery-address-page.validator.ts","./src/app/cart/payment-method-page/payment-method-page.component.ts","./src/app/cart/payment-method-page/payment-method-page.component.html","./src/app/shared/backend/cart/cart.service.ts","./src/app/user/is-authenticated.guard.ts"],"sourcesContent":["import CartItem from './cart-item.model';\nimport { Component, Input } from '@angular/core';\nimport { CartManagementService } from '../cart-management.service';\n\n@Component({\n    selector: 'app-cart-item',\n    templateUrl: './cart-item.component.html',\n    styleUrls: ['./cart-item.component.css']\n})\nexport class CartItemComponent {\n    \n    @Input() cartItem: CartItem | undefined;\n \n    constructor(private cartManagementService: CartManagementService) { }\n\n    get priceInCentavos(): string {\n        if(!this.cartItem) return \"\";\n\n        return `${Math.floor((this.cartItem.totalPrice - Math.floor(this.cartItem.totalPrice))*100)}`.padEnd(2, \"0\");\n    }\n\n    get priceInReal(): number {\n        if(!this.cartItem) return 0;\n\n        return Math.floor(this.cartItem.totalPrice);\n    }\n\n    decrementItem(): void {\n        this.cartManagementService.decrementItem(this.cartItem!.book.id)\n    }\n\n    deleteItem(): void {\n        this.cartManagementService.deleteItem(this.cartItem!.book.id)\n    }\n\n    incrementItem(): void {\n        this.cartManagementService.incrementItem(this.cartItem!.book.id)\n    }\n    \n}\n","<ng-container *ngIf=\"this.cartItem\">\n    <div class=\"book-cover\">\n        <img alt=\"Capa do livro\" [src]=\"this.cartItem.book.bookCoverUrl\">\n    </div>\n    <div class=\"book-data\">\n        <div class=\"book-data__name-author-and-remove-item\">\n            <div class=\"book-data__name-and-author\">\n                <span class=\"book-data__name text-preset-430\">{{this.cartItem.book.title}}</span>\n                <span class=\"book-data__author text-preset-350\">{{this.cartItem.book.author}}</span>\n            </div>\n            <span class=\"book-data__remove-item text-preset-350\" (click)=\"this.deleteItem()\">Remover item</span>\n        </div>\n        <div class=\"book-data__quantity\">\n            <app-small-button (click)=\"this.decrementItem()\" [label]=\"'-'\"></app-small-button>\n            <span class=\"quantity__label text-preset-420\">{{this.cartItem.quantity}}</span>\n            <app-small-button (click)=\"this.incrementItem()\" [label]=\"'+'\"></app-small-button>\n        </div>\n        <span class=\"book-data__price text-preset-430\">R$ {{this.priceInReal}}<span class=\"text-preset-230\">,{{this.priceInCentavos}}</span></span>\n    </div>\n</ng-container>","import { CartManagementService } from '../cart-management.service';\nimport { Component } from '@angular/core';\nimport CartItem from '../cart-item/cart-item.model';\n\n@Component({\n    selector: 'app-cart-page',\n    templateUrl: './cart-page.component.html',\n    styleUrls: ['./cart-page.component.css']\n})\nexport class CartPageComponent {\n    \n    constructor(\n        private cartManagementService: CartManagementService\n    ) { }\n    \n    get cart(): CartItem[] {\n        return this.cartManagementService.cart;\n    }\n\n}\n","<app-default-page>\n    <span class=\"page-title text-preset-650\">Seu carrinho</span>\n    <ng-container *ngIf=\"this.cart.length > 0\">\n        <div class=\"items\">\n            <app-cart-item\n                [cartItem]=\"cartItem\"\n                *ngFor=\"let cartItem of this.cart\"\n            ></app-cart-item>\n        </div>\n        <div class=\"buttons-row\">\n            <app-button\n                [label]=\"'Fechar pedido'\"\n                [routerLink]=\"'/cart/delivery-address'\"\n                [type]=\"'primary'\"\n            ></app-button>\n        </div>\n    </ng-container>\n    <span class=\"empty-cart-label text-preset-450\" *ngIf=\"this.cart.length === 0\">Nenhum item no carrinho</span>\n</app-default-page>","import { CartItemComponent } from './cart-item/cart-item.component';\nimport { CartPageComponent } from './cart-page/cart-page.component';\nimport { DeliveryAddressPageComponent } from './delivery-address-page/delivery-address-page.component';\nimport { NgModule } from '@angular/core';\nimport { PaymentMethodPageComponent } from './payment-method-page/payment-method-page.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { IsAuthenticatedGuard } from '../user/is-authenticated.guard';\n\nconst cartRoutes: Routes = [\n    {\n        component: CartPageComponent,\n        path: \"\"\n    },\n    {\n        component: DeliveryAddressPageComponent,\n        canActivate: [IsAuthenticatedGuard],\n        path: \"delivery-address\"\n    },\n    {\n        component: PaymentMethodPageComponent,\n        canActivate: [IsAuthenticatedGuard],\n        path: \"payment-method\"\n    }\n];\n\n@NgModule({\n    declarations: [\n        CartItemComponent,\n        CartPageComponent,\n        DeliveryAddressPageComponent,\n        PaymentMethodPageComponent\n    ],\n    imports: [\n        ReactiveFormsModule,\n        RouterModule.forChild(cartRoutes),\n        SharedModule\n    ]\n})\nexport class CartModule { }\n","import { Component } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport DeliveryAddressPageValidator from './delivery-address-page.validator';\n\n@Component({\n    selector: 'app-delivery-address-page',\n    templateUrl: './delivery-address-page.component.html',\n    styleUrls: ['./delivery-address-page.component.css']\n})\nexport class DeliveryAddressPageComponent {\n    \n    form: FormGroup;\n\n    constructor(formBuilder: FormBuilder, private router: Router, validator: DeliveryAddressPageValidator) {\n        this.form = formBuilder.group({\n            CEP: new FormControl(\"\"),\n            street: new FormControl(\"\", validator.street),\n            number: new FormControl(\"\", validator.number),\n            district: new FormControl(\"\", validator.district),\n            city: new FormControl(\"\", validator.city),\n            state: new FormControl(\"\", validator.state),\n            supplement: new FormControl(\"\")\n        });\n    }\n\n    goToPaymentMethod(): void {\n        this.router.navigateByUrl(\"/cart/payment-method\");\n    }\n        \n}\n","<app-default-page>\n    <span class=\"page-title text-preset-650\">Endereço de entrega</span>\n    <form class=\"grid\" [formGroup]=\"this.form\" [noValidate]=\"\">\n        <div class=\"col-2\">\n            <app-field\n                [abstractControl]=\"this.form.controls['CEP']\"\n                formControlName=\"CEP\"\n                [label]=\"'CEP (Opcional)'\"\n            ></app-field>\n        </div>\n        <div class=\"col-6\">\n            <app-field\n                [abstractControl]=\"this.form.controls['street']\"\n                formControlName=\"street\"\n                [label]=\"'Logradouro'\"\n            ></app-field>\n        </div>\n        <div class=\"col-2\">\n            <app-field\n                [abstractControl]=\"this.form.controls['number']\"\n                formControlName=\"number\"\n                [label]=\"'Número'\"\n                [type]=\"'number'\"\n            ></app-field>\n        </div>\n        <div class=\"col-6\">\n            <app-field\n                [abstractControl]=\"this.form.controls['district']\"\n                formControlName=\"district\"\n                [label]=\"'Bairro'\"\n            ></app-field>\n        </div>\n        <div class=\"col-4\">\n            <app-field\n                [abstractControl]=\"this.form.controls['city']\"\n                formControlName=\"city\"\n                [label]=\"'Cidade'\"\n            ></app-field>\n        </div>\n        <div class=\"col-4\">\n            <app-field\n                [abstractControl]=\"this.form.controls['state']\"\n                formControlName=\"state\"\n                [label]=\"'Estado'\"\n            ></app-field>\n        </div>\n        <div class=\"col-8\">\n            <app-field\n                [abstractControl]=\"this.form.controls['supplement']\"\n                formControlName=\"supplement\"\n                [label]=\"'Complemento (Opcional)'\"\n            ></app-field>\n        </div>\n    </form>\n    <div class=\"buttons-row\">\n        <app-button [label]=\"'Voltar'\" [routerLink]=\"'/cart'\" [type]=\"'secondary'\"></app-button>\n        <app-button\n            (btnClick)=\"this.goToPaymentMethod()\"\n            [disabled]=\"this.form.invalid\"\n            [label]=\"'Forma de pagamento'\"\n            [type]=\"'primary'\"\n        ></app-button>\n    </div>\n</app-default-page>","import { AbstractControl, ValidationErrors } from \"@angular/forms\";\nimport { Injectable } from \"@angular/core\";\n\n\n@Injectable({\n    providedIn: \"root\"\n})\nclass DeliveryAddressPageValidator {\n\n    street(control: AbstractControl): null | ValidationErrors {\n        const value = `${control.value ?? \"\"}`.trim();\n\n        if(value.length === 0) {\n            return { \"street\": \"Necessário fornecer um logradouro\" }\n        }\n\n        return null;\n    }\n\n    number(control: AbstractControl): null | ValidationErrors {\n        const value = `${control.value ?? \"\"}`.trim();\n\n        if(value.length === 0) {\n            return { \"number\": \"Necessário fornecer um número \" }\n        }\n\n        return null;\n    }\n\n    district(control: AbstractControl): null | ValidationErrors {\n        const value = `${control.value ?? \"\"}`.trim();\n\n        if(value.length === 0) {\n            return { \"district\": \"Necessário fornecer um bairro\" }\n        }\n\n        return null;\n    }\n\n    city(control: AbstractControl): null | ValidationErrors {\n        const value = `${control.value ?? \"\"}`.trim();\n\n        if(value.length === 0) {\n            return { \"city\": \"Necessário fornecer uma cidade\" }\n        }\n\n        return null;\n    }\n\n    state(control: AbstractControl): null | ValidationErrors {\n        const value = `${control.value ?? \"\"}`.trim();\n\n        if(value.length === 0) {\n            return { \"state\": \"Necessário fornecer um estado\" }\n        }\n\n        return null;\n    }\n    \n}\n\nexport default DeliveryAddressPageValidator","import { CartService } from 'src/app/shared/backend/cart/cart.service';\nimport { CartManagementService } from '../cart-management.service';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport ApiReturn from 'src/app/shared/backend/server-response/api-return.model';\nimport JavaErrorResponse from 'src/app/shared/backend/server-response/java-error-response.model';\n\n@Component({\n    selector: 'app-payment-method-page',\n    templateUrl: './payment-method-page.component.html',\n    styleUrls: ['./payment-method-page.component.css']\n})\nexport class PaymentMethodPageComponent {\n    \n    errorMessage: string = \"\";\n    paymentMethod: string = \"\";\n    showEndOfDemoModal: boolean = false;\n    showErrorMessage: boolean = false;\n    \n    constructor(\n        private cartManagementService: CartManagementService,\n        private cartService: CartService,\n        private router: Router\n    ) { }\n\n    buy(): void {\n        this.cartService.buy().subscribe({\n            error: (err: JavaErrorResponse<string>) => {\n                this.errorMessage = err.error.data;\n                this.showErrorMessage = true;\n            },\n            next: value => {\n                this.showEndOfDemoModal = true;\n            }\n        })\n    }\n\n    goToHomePage(): void {\n        this.cartManagementService.clear();\n        this.router.navigateByUrl(\"/\")\n    }\n\n}\n","<app-default-page>\n    <span class=\"page-title text-preset-650\">Forma de pagamento</span>\n    <app-alert\n        [canClose]=\"true\"\n        (close)=\"this.showErrorMessage = false\"\n        [message]=\"this.errorMessage\"\n        *ngIf=\"this.showErrorMessage\"\n        [type]=\"'error'\"\n    ></app-alert>\n    <div class=\"payment-options\">\n        <div\n            class=\"payment-options__option text-preset-450\"\n            (click)=\"this.paymentMethod = 'Boleto'\"\n            [ngClass]=\"{ 'payment-options__option--active': this.paymentMethod === 'Boleto'}\"\n        >Boleto</div>\n        <div\n            class=\"payment-options__option text-preset-450\"\n            (click)=\"this.paymentMethod = 'Cartão de crédito'\"\n            [ngClass]=\"{ 'payment-options__option--active': this.paymentMethod === 'Cartão de crédito'}\"\n        >Cartão de crédito</div>\n        <div\n            class=\"payment-options__option text-preset-450\"\n            (click)=\"this.paymentMethod = 'Paypal'\"\n            [ngClass]=\"{ 'payment-options__option--active': this.paymentMethod === 'Paypal'}\"\n        >Paypal</div>\n        <div\n            class=\"payment-options__option text-preset-450\"\n            (click)=\"this.paymentMethod = 'Pix'\"\n            [ngClass]=\"{ 'payment-options__option--active': this.paymentMethod === 'Pix'}\"\n        >Pix</div>\n    </div>\n    <div class=\"buttons-row\">\n        <app-button\n            [routerLink]=\"'/cart/delivery-address'\"\n            [label]=\"'Voltar'\"\n            [type]=\"'secondary'\"\n        ></app-button>\n        <app-button\n            (btnClick)=\"this.buy()\"\n            [disabled]=\"this.paymentMethod === ''\"\n            [label]=\"'Finalizar pedido'\"\n            [type]=\"'primary'\"\n        ></app-button>\n    </div>\n</app-default-page>\n<app-modal\n    (closeButtonClick)=\"this.goToHomePage()\"\n    [closeButtonLabel]=\"'Ir para página inicial'\"\n    *ngIf=\"this.showEndOfDemoModal\"\n    [textContent]=\"'Este aplicativo foi criado apenas como demonstração de como eu desenvolvo uma aplicação utilizando o Angular no front-end e Java no back-end. O objetivo não é fazer uma compra real, apenas demonstrar funcionalidades no aplicativo.'\"\n    [title]=\"'Fim da demo'\"\n></app-modal>","import { CartManagementService } from 'src/app/cart/cart-management.service';\nimport { DefaultHttpService } from '../../services/default-http/default-http.service';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport ApiReturn from '../server-response/api-return.model';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CartService {\n\n    public readonly controllerPath: string = \"cart\";\n\n    constructor(\n        private cartManagementService: CartManagementService,\n        private defaultHttpService: DefaultHttpService\n    ) { }\n\n    buy(): Observable<ApiReturn<string>> {\n        return this.defaultHttpService.post<ApiReturn<string>>(\n            `${environment.backendUrl}/api/${this.controllerPath}/buy`,\n            this.cartManagementService.cart\n        )\n    }\n\n}\n","import { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { UserService } from '../shared/backend/user/user.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class IsAuthenticatedGuard implements CanActivate {\n\n    constructor(private userService: UserService, private router: Router) { }\n\n    canActivate(\n        route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot): boolean {\n            if(!this.userService.isAuthenticated) {\n                this.router.navigate(\n                    [\"/user\"],\n                    {\n                        queryParams: {\n                            \"return-to\": route.pathFromRoot.map(v => v.url.map(segment => segment.toString()).join('/')).join('/')\n                        }\n                    }\n                );\n                return false;\n            }\n            return true;\n        }\n        \n    }\n    "],"names":[],"sourceRoot":"webpack:///"}