{"version":3,"file":"src_app_home_home_module_ts.js","mappings":"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","sources":["./src/app/home/home-page/home-page.component.ts","./src/app/home/home-page/home-page.component.html","./src/app/home/home.module.ts","./src/app/shared/backend/book/book.service.ts","./src/app/shared/backend/crud-backend.service.ts","./src/app/shared/services/user-preferences/user-preferences.service.ts","./node_modules/rxjs/dist/esm/internal/firstValueFrom.js"],"sourcesContent":["import Book from 'src/app/shared/backend/book/book.model';\nimport { BookService } from 'src/app/shared/backend/book/book.service';\nimport { Component, OnInit } from '@angular/core';\nimport { UserPreferencesService } from 'src/app/shared/services/user-preferences/user-preferences.service';\n\n@Component({\n    selector: 'app-home-page',\n    templateUrl: './home-page.component.html',\n    styleUrls: ['./home-page.component.css']\n})\nexport class HomePageComponent implements OnInit {\n    \n    books: Book[] = [];\n\n    constructor(\n        private bookService: BookService,\n        private userPreferencesService: UserPreferencesService\n    ) { }\n\n    ngOnInit(): void {\n        this.bookService.readAll().subscribe(x => {\n            this.books = x;\n        });\n    }\n    \n    get showWelcomeModal(): boolean {\n        return this.userPreferencesService.userPreferences.showWelcomeModal;\n    }\n\n    closeButtonClick(): void {\n        this.userPreferencesService.setProperty(\"showWelcomeModal\", false);\n    }\n\n}\n","<app-default-page>\n    <div class=\"search\">\n        <span class=\"text-preset-650 welcome-message\">Boas-vindas! Faça a busca pelo nome do livro ou autor(a)</span>\n        <div class=\"search-group\">\n            <app-field></app-field>\n            <app-button [type]=\"'search'\"></app-button>\n        </div>\n    </div>\n    <div class=\"books\">\n        <app-book-preview\n            [book]=\"book\"\n            *ngFor=\"let book of this.books\"\n            [routerLink]=\"'/book/' + book.id\"\n        ></app-book-preview>\n    </div>\n    <span class=\"load-more text-preset-470\">Carregar mais</span>\n</app-default-page>\n<app-modal\n    (closeButtonClick)=\"this.closeButtonClick()\"\n    [closeButtonLabel]=\"'Entendido'\"\n    [textContent]=\"'Esse aplicativo é uma demo de um e-commerce de livros. Por ser uma demo, as compras não podem ser concluídas, mas, você pode adicionar itens ao carrinho, fornecer um endereço de entrega e escolher um método de pagamento.\\n\\nOs dados dos livros foram retirados da amazon no dia 03/07/2022'\"\n    [title]=\"'Boas vindas!'\"\n    *ngIf=\"this.showWelcomeModal\"\n></app-modal>","import { HomePageComponent } from './home-page/home-page.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\n\nconst homeRoutes: Routes = [\n    {\n        component: HomePageComponent,\n        path: \"\"\n    }\n];\n\n@NgModule({\n    declarations: [\n        HomePageComponent\n    ],\n    imports: [\n        RouterModule.forChild(homeRoutes),\n        SharedModule\n    ]\n})\nexport class HomeModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CrudBackendService } from '../crud-backend.service';\nimport Book from './book.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BookService {\n    \n    constructor(private crudBackendService: CrudBackendService) { }\n\n    create(model: Book): Promise<void> {\n        throw new Error('Method not implemented.');\n    }\n\n    delete(id: string): Promise<void> {\n        throw new Error('Method not implemented.');\n    }\n\n    read(id: string): Promise<Book | undefined> {\n        throw new Error('Method not implemented.');\n    }\n\n    readAll(): Observable<Book[]> {\n        return this.crudBackendService.readAll<Book>(\"book\");\n    }\n\n    update(model: Book): Promise<void> {\n        throw new Error('Method not implemented.');\n    }\n}\n","import { environment } from 'src/environments/environment';\nimport { firstValueFrom, Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CrudBackendService {\n    \n    constructor(private httpClient: HttpClient) { }\n\n    create<T>(model: any): Promise<T> {\n        throw new Error('Method not implemented.');\n        \n        return firstValueFrom(\n            this.httpClient.post<T>(\n                environment.backendUrl,\n                JSON.stringify(model),\n                { headers: { \"Content-type\": \"application/json\" } }\n            )\n        );\n    }\n    \n    delete(id: string): Promise<void> {\n        throw new Error('Method not implemented.');\n    }\n    \n    read(id: string): Promise<any> {\n        throw new Error('Method not implemented.');\n    }\n\n    readAll<T>(controllerPath: string): Observable<T[]> {\n        return this.httpClient.get<T[]>(\n            `${environment.backendUrl}/${controllerPath}/getAll`,\n            { headers: { \"Content-type\": \"application/json\" } }\n        )\n    }\n\n    update(model: any): Promise<void> {\n        throw new Error('Method not implemented.');\n    }\n}\n","import { Injectable } from '@angular/core';\nimport UserPreferences from './user-preferences.model';\n\nconst defaultUserPreferences: UserPreferences = {\n    showWelcomeModal: true\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserPreferencesService {\n    \n    public readonly userPreferencesKey: string = \"user-preferences\";\n\n    constructor() {\n        const userPreferencesString: null | string = localStorage.getItem(this.userPreferencesKey);\n        let userPreferences: UserPreferences;\n\n        if(userPreferencesString === null) {\n            userPreferences = defaultUserPreferences;\n        }\n        else {        \n            userPreferences = JSON.parse(userPreferencesString);\n            let key: keyof typeof defaultUserPreferences;\n    \n            // After an update on user preferences, if a new key is create, it will be assigned to the\n            // already existing preferences.\n            for(key in defaultUserPreferences) {\n                if(!Object.keys(userPreferences).includes(key)) {\n                    userPreferences[key] = defaultUserPreferences[key];\n                }\n            }\n        }\n\n        localStorage.setItem(this.userPreferencesKey, JSON.stringify(userPreferences));\n    }\n\n    get userPreferences(): UserPreferences {\n        // The object will not return null, because it's initialized in the service constructor\n        return JSON.parse(localStorage.getItem(this.userPreferencesKey)!)\n    }\n\n    setProperty<K extends keyof UserPreferences>(propertyName: K, value: UserPreferences[K]) {\n        const userPreferences = this.userPreferences;\n        userPreferences[propertyName] = value;\n\n        localStorage.setItem(this.userPreferencesKey, JSON.stringify(userPreferences));\n    }\n\n}\n","import { EmptyError } from './util/EmptyError';\nimport { SafeSubscriber } from './Subscriber';\nexport function firstValueFrom(source, config) {\n    const hasConfig = typeof config === 'object';\n    return new Promise((resolve, reject) => {\n        const subscriber = new SafeSubscriber({\n            next: (value) => {\n                resolve(value);\n                subscriber.unsubscribe();\n            },\n            error: reject,\n            complete: () => {\n                if (hasConfig) {\n                    resolve(config.defaultValue);\n                }\n                else {\n                    reject(new EmptyError());\n                }\n            },\n        });\n        source.subscribe(subscriber);\n    });\n}\n"],"names":["EmptyError","SafeSubscriber","firstValueFrom","source","config","hasConfig","Promise","resolve","reject","subscriber","next","value","unsubscribe","error","complete","defaultValue","subscribe"],"sourceRoot":"webpack:///"}